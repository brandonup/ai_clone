--- Initializing Qdrant client globally ---
--- Initializing Qdrant vectorstore globally ---
--- Successfully initialized global Qdrant vectorstore and retriever ---
Testing question: What does Paul Graham say about startups and co-founders?

--- Running Adaptive RAG for: 'What does Paul Graham say about startups and co-founders?' ---
---ROUTE QUESTION---
---ROUTE: Question to Vectorstore---
---RETRIEVE FROM VECTORSTORE (Node Initialization)---
--- Using global retriever ---
--- Retrieved 4 documents ---
--- Document Contents (Full content of each) ---
Doc 1 (Document object): 
Doc 1 metadata: {'_id': 'e4fd0833-860c-47cb-8b83-2cf01e2ceb81', '_collection_name': 'ai_coach_docs'}
Doc 2 (Document object): 
Doc 2 metadata: {'_id': '6c4b335f-97f9-493b-a48d-57b77821362f', '_collection_name': 'ai_coach_docs'}
Doc 3 (Document object): 
Doc 3 metadata: {'_id': '658fcc8c-13a4-440b-a19f-80e3d1d7ea4d', '_collection_name': 'ai_coach_docs'}
Doc 4 (Document object): 
Doc 4 metadata: {'_id': '4c61bca9-c849-4985-93bc-6ae9da28be51', '_collection_name': 'ai_coach_docs'}
--- Document Types ---
Doc 1 type: <class 'langchain_core.documents.base.Document'>
Doc 2 type: <class 'langchain_core.documents.base.Document'>
Doc 3 type: <class 'langchain_core.documents.base.Document'>
Doc 4 type: <class 'langchain_core.documents.base.Document'>
"Node 'retrieve':"
'\n---\n'
---CHECK DOCUMENT RELEVANCE---
--- Grading 4 documents for relevance ---
--- Document 1 is a Document object ---
--- Document 1 Content (first 100 chars): ... ---
--- Retrieval Grader Result for Doc 1: 'yes' ---
---GRADE: DOCUMENT 1 RELEVANT---
--- Document 2 is a Document object ---
--- Document 2 Content (first 100 chars): ... ---
--- Retrieval Grader Result for Doc 2: 'yes' ---
---GRADE: DOCUMENT 2 RELEVANT---
--- Document 3 is a Document object ---
--- Document 3 Content (first 100 chars): ... ---
--- Retrieval Grader Result for Doc 3: 'yes' ---
---GRADE: DOCUMENT 3 RELEVANT---
--- Document 4 is a Document object ---
--- Document 4 Content (first 100 chars): ... ---
--- Retrieval Grader Result for Doc 4: 'yes' ---
---GRADE: DOCUMENT 4 RELEVANT---
--- After grading: 4 documents found relevant out of 4 ---
---ASSESS GRADED DOCUMENTS---
---DECISION: Relevant documents found, Generate Answer---
"Node 'grade_documents':"
'\n---\n'
---GENERATE RAG ANSWER---
--- Generation attempt #1 ---
---CHECK HALLUCINATIONS & ANSWER RELEVANCE---
--- Grading generation attempt #1 ---
--- Question: What does Paul Graham say about startups and co-founders? ---
--- Generation: Unfortunately, the provided documents do not contain the answer. ---
--- Number of documents: 4 ---
--- Document texts for hallucination check (first 200 chars): 





... ---
--- Hallucination Grader Result: 'yes' ---
---GRADE: Generation IS grounded in documents---
--- Answer Grader Result: 'no' ---
---GRADE: Generation does NOT address question---
---DECISION: Generation attempt 1/3, retrying generation---
"Node 'generate':"
'\n---\n'
---GENERATE RAG ANSWER---
--- Generation attempt #2 ---
---CHECK HALLUCINATIONS & ANSWER RELEVANCE---
--- Grading generation attempt #2 ---
--- Question: What does Paul Graham say about startups and co-founders? ---
--- Generation: Unfortunately, the provided documents do not contain the answer. ---
--- Number of documents: 4 ---
--- Document texts for hallucination check (first 200 chars): 





... ---
--- Hallucination Grader Result: 'yes' ---
---GRADE: Generation IS grounded in documents---
--- Answer Grader Result: 'no' ---
---GRADE: Generation does NOT address question---
---DECISION: Generation attempt 2/3, retrying generation---
"Node 'generate':"
'\n---\n'
---GENERATE RAG ANSWER---
--- Generation attempt #3 ---
---CHECK HALLUCINATIONS & ANSWER RELEVANCE---
--- Grading generation attempt #3 ---
--- Question: What does Paul Graham say about startups and co-founders? ---
--- Generation: Unfortunately, the provided documents do not contain the answer. ---
--- Number of documents: 4 ---
--- Document texts for hallucination check (first 200 chars): 





... ---
--- Hallucination Grader Result: 'yes' ---
---GRADE: Generation IS grounded in documents---
--- Answer Grader Result: 'no' ---
---GRADE: Generation does NOT address question---
---DECISION: Max generation attempts (3) reached, falling back to web search---
"Node 'generate':"
'\n---\n'
---WEB SEARCH (SerpDev)---
---WEB SEARCH: SERPDEV_API_KEY not set. Skipping.---
"Node 'web_search':"
'\n---\n'
---GENERATE RAG ANSWER---
--- Generation attempt #4 ---
---GENERATE RAG: No documents found, falling back to LLM---
---LLM FALLBACK---
---CHECK HALLUCINATIONS & ANSWER RELEVANCE---
--- Grading generation attempt #3 ---
--- Question: What does Paul Graham say about startups and co-founders? ---
--- Generation: Paul Graham emphasizes that choosing the right co-founder is crucial, as they should complement your skills and share your vision. He also highlights that the best co-founder relationships are built on mutual respect and trust, not just friendship. Focus on finding someone who can handle what you can’t and is equally committed to the startup’s success. ---
--- Number of documents: 0 ---
---GRADE: No documents to check against, assuming 'not supported'---
--- Answer Grader Result (no docs): 'yes' ---
---GRADE: Answer addresses question (no docs)---
"Node 'generate':"
'\n---\n'
--- Adaptive RAG Finished ---

=== RESULTS ===
Generation: Paul Graham emphasizes that choosing the right co-founder is crucial, as they should complement your skills and share your vision. He also highlights that the best co-founder relationships are built on mutual respect and trust, not just friendship. Focus on finding someone who can handle what you can’t and is equally committed to the startup’s success.

Number of documents: 0

=== PROMPT COMPOSITION ===
--- Fallback Prompt ---
Preamble: === COACH PERSONA ===
You are AI Coach an expert in startups and entrepreneurship. Answer the user's question as their AI coach.

=== CONVERSATION HISTORY ===


=== INSTRUCTIONS ===
- Always respond in the tone and style of AI Coach, with a friendly and professional tone.
- Answer the question based upon your knowledge.
- Keep answers concise unless more detail is asked, and focus on actionable advice.
- NEVER mention that you are an AI language model or that you're using any specific information sources.
- Use three sentences maximum and keep the answer concise.

Messages:
input_variables=[] input_types={} partial_variables={} messages=[HumanMessage(content='Question: What does Paul Graham say about startups and co-founders? \nAnswer: ', additional_kwargs={}, response_metadata={})]
